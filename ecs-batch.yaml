AWSTemplateFormatVersion: 2010-09-09
Description: ECS Fargate Create

Parameters:
  ProjectName:
    Type: String
    Default: env-echo

  BatchName:
    Description: batch name (part of a logical or phisical identifier)
    Type: String
    MinLength: 3
    MaxLength: 100
    AllowedPattern: '[a-z][a-z0-9\-]*'

  VPCID:
    Description: target vpc id
    Type: AWS::EC2::VPC::Id

  PublicSubnetIDs:
    Description: public subnet ids
    Type: List<AWS::EC2::Subnet::Id>

  PrivateSubnetIDs:
    Description: private subnet ids
    Type: List<AWS::EC2::Subnet::Id>

  ContainerImageName:
    Description: application container image name
    Type: String
    Default: hello-world

  ScheduleExpression:
    Type: String
    Description: cron settings
    Default: "cron(0/5 * * * ? *)"

Resources:
  # ------------------------------------------------------------#
  #  ECS（Batch）
  # ------------------------------------------------------------#
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-batch-${BatchName}-ecs
      GroupDescription: !Sub ${ProjectName}-batch-${BatchName}-ecs
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-batch-${BatchName}-ecs

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-batch-${BatchName}-ecs-task-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-batch-${BatchName}-ecs-task-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ProjectName}-batch-${BatchName}

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ProjectName}-batch-${BatchName}
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: main
          Image: !Sub ${ContainerImageName}
          Cpu: "10"
          Memory: "500"
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Secrets:
            - Name: DOTENV_BODY
              ValueFrom: !Sub /${ProjectName}/dotenv
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-batch-${BatchName}

  TaskScheduleEvents:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${ProjectName}-batch-${BatchName}
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Id: 1
          RoleArn: !GetAtt ECSTaskRole.Arn
          EcsParameters:
            # 起動タイプをFARGATEにしてCloudWatchEventを作ることは現在サポートされていないので
            # 起動タイプEC2で作ってから手動でFARGATEに切り替えること
            # LaunchType: FARGATE
            TaskDefinitionArn: !Ref ECSTaskDefinition
            TaskCount: 1
            # NetworkConfiguration:
            #   AwsvpcConfiguration:
            #     AssignPublicIp: DISABLED
            #     SecurityGroups:
            #       - !Ref ECSSecurityGroup
            #     Subnets: !Ref PrivateSubnetIDs
          Arn: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ProjectName}

Outputs: {}
